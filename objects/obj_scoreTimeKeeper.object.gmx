<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scale1 = 1; // The scale of the Player 1 Score
scale2 = 1; // The scale of the Player 2 Score
scaleZoom = 1; // The scale according to the view zoom
time = global.TimeCap;
timeMin = 0; // The time in minutes (DO NOT USE FOR CHECKING)
timeSec = 0; // The time in seconds (DO NOT USE FOR CHECKING)
timeSecOld = 0;
timeZero = false; // If the time is 0
flashTimer = 120
flash = false;
beepPitch = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timeSecOld = timeSec;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Score Keeper Part
if (global.GameStart == true)
{
    if global.Player1ScoreNew = true
    {
        scale1 = 2;
        global.Player1ScoreNew = false;  
    }
        
    if global.Player2ScoreNew = true
    {
        scale2 = 2;
        global.Player2ScoreNew = false;
    }
        
    if scale1 != 1
    {
        scale1 -= 0.1
    }
        
        
    if scale2 != 1
    {
        scale2 -= 0.1
    }

    // Time keeper part
    if (time &gt; 0.017) { time -= (1 / 60); }
    
    timeMin = (time / 60); // Calculate the minutes
    timeMin = floor( timeMin ) // Remove the decimals
    timeSec = (time mod 60); // Calculate the seconds
    timeSec = floor( timeSec ) // Remove the decimals
    
    if (time &lt; 31) { flash = true; }
    
    if (flash)
    {
        flashTimer--;
        
        if (timeSec != timeSecOld &amp;&amp; obj_gameController.NewLimitReached == false)
        {
            audio_sound_pitch(snd_beep, beepPitch);
            audio_play_sound(snd_beep, 1, 0);
            beepPitch += 0.02
        }
    }
    if (flashTimer = 0)
    {
        flashTimer = 120;
    }
}


// Get window width and height
width = window_get_width();
height = window_get_height();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.GameStart == true)
{
    // Drop Shadow
    draw_set_font(fnt_main);
    draw_set_color(c_black);
    draw_set_halign(fa_center);
    draw_set_valign(fa_left);
    draw_text_transformed((width / 4 + width / 2) + 5, 10 + 5,global.Player1Score,scale1,scale1, 0); // Draw player 1's score
    draw_text_transformed(width / 4 - 5, 10 + 5,global.Player2Score,scale2, scale2, 0); // Draw player 2's score
    if (timeSec &lt; 10) { draw_text_transformed(1920 / 2, 10 + 5, string(timeMin) + ":0" + string(timeSec), 1, 1, 0); } // Draw the timer with extra 0
    else { draw_text_transformed(width / 2, 10 + 5, string(timeMin) + ":" + string(timeSec), 1, 1, 0); } // Draw the timer without extra 0
    
    // White Foretext
    draw_set_font(fnt_main);
    draw_set_color(c_white);
    draw_set_halign(fa_center);
    draw_set_valign(fa_left);
    draw_text_transformed((width / 4 + width / 2),10,global.Player1Score,scale1,scale1 , 0); // Draw player 1's score
    draw_text_transformed(width / 4, 10,global.Player2Score, scale2, scale2, 0); // Draw player 2's score
    
    if (flash)
    {
        if (flashTimer &gt; 60)
        {
            draw_set_color(c_red);
        }
    }
    
    if (timeSec &lt; 10) { draw_text_transformed(1920 / 2, 10, string(timeMin) + ":0" + string(timeSec), 1, 1, 0); } // Draw the timer with extra 0
    else { draw_text_transformed(width / 2, 10, string(timeMin) + ":" + string(timeSec), 1, 1, 0); } // Draw the timer without extra 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
