<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_player_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
grav = 0.8;
hsp = 0;
hsp_carry = 0;
vsp = 0;
movespeed = 16;
jumps = 1;

jumpsmax = 2;

jumpspeed_normal = 18;
jumpspeed_powerup = 10;

jumpspeed = jumpspeed_normal

dash = 0;
VDashSpeed = 75;
DashGround = 0;

x = obj_player2Spawn.x;
y = obj_player2Spawn.y;

key_down = 0;


vsp = -jumpspeed;

// choosing the character
// if the player choose: Monopoly
if (global.Player2Profile = 1)
{
sprite_idle =   spr_monopoly_idle;
sprite_run =    spr_monopoly_run;
sprite_jump =   spr_monopoly_jump;
sprite_fall =   spr_monopoly_fall;
sprite_dash =   spr_monopoly_dash;
}
// if the player choose: Mens Erger Je Niet
if (global.Player2Profile = 2)
{
sprite_idle =   spr_mens_idle;
sprite_run =    spr_mens_run;
sprite_jump =   spr_mens_jump;
sprite_fall =   spr_mens_fall;
sprite_dash =   spr_mens_dash;
}
// if the debug mode is on
if (global.Player2Profile = 0)
{
sprite_idle =   spr_player_idle;
sprite_run =    spr_player_run;
sprite_jump =   spr_player_jump;
sprite_fall =   spr_player_fall;
sprite_dash =   spr_player_dash;
}

gamepad_set_axis_deadzone(0,0.3);

instance_create(x, y, obj_shockwave2);

global.ShockDeath = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>DashGround = 0
view_yview = 0
sprite_index = sprite_idle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>DashGround = 1;
alarm[1] = 15;
audio_stop_sound(snd_wind2);
audio_play_sound(snd_inpact,1,0);
sprite_index = sprite_dash;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Get the player's input
key_right = (gamepad_axis_value(0,gp_axislh) &gt; 0);
key_left = -(gamepad_axis_value(0,gp_axislh) &lt; 0);
key_jump = gamepad_button_check_pressed(0,gp_face1);
key_jump_held = gamepad_button_check(0,gp_face1);
key_down = gamepad_button_check(0,gp_face3) || gamepad_button_check(0,gp_face2);
if (DashGround == 0)
{
//React to inputs
move = key_left + key_right;
hsp = move * movespeed;
if  (dash == 0)
{
    if (vsp &lt; 30) vsp += grav;
}
//Jumps
if (place_meeting(x,y+1,obj_wall))
{
    jumps = jumpsmax;
}
else
{
    if (jumps == jumpsmax) jumps -=1;
}

if (key_jump) &amp;&amp; (jumps &gt; 0) &amp;&amp; (!key_down)
{
    if (jumps == 2)
    {
        audio_play_sound(snd_jump1,1,0)
    }
    if (jumps == 1)
    {
        instance_create(obj_player2.x+0,obj_player2.y+32,obj_doubleJumpFX)
        audio_play_sound(snd_jump2,1,0)
    }
    jumps -= 1;
    vsp = -jumpspeed;
}

if (vsp &lt; 0) &amp;&amp; (!key_jump_held) vsp = max(vsp,-jumpspeed/2)

if (key_down)
{
    if !audio_is_playing(snd_wind2)
    {
        audio_play_sound(snd_wind2,1,0);
    }
    vsp = VDashSpeed
    dash = 1;
    jumps = 0;
}

var hsp_final = hsp + hsp_carry;
hsp_carry = 0;

//Horizontal Collision
if (place_meeting(x+hsp_final,y,obj_wall))
{
    while(!place_meeting(x+sign(hsp_final),y,obj_wall))
    {
        x += sign(hsp_final);
    }
    hsp_final = 0;
    hsp = 0;
}
x += hsp_final;

//Vertical Collision
if (place_meeting(x,y+vsp,obj_wall))

{
    
    while(!place_meeting(x,y+sign(vsp),obj_wall))
    {
        y += sign(vsp);
        if (dash = 1)
        {
            alarm[0] = 1
        }
    }
    audio_stop_sound(snd_wind2);
    vsp = 0;
    dash = 0;
}
y += vsp;
// other player collisioon horizontal
if (place_meeting(x+hsp_final,y,obj_player))
{
        hsp = -hsp    
}



// other player collision vertical
if (place_meeting(x,y+vsp,obj_player))
{
    if vsp &gt; 0
    if (dash == 1)
    {
    with (obj_player) script_execute(scr_playerded);
    }
    else
    {
    vsp = -jumpspeed;
    }

}


//Animate
if (move!=0) image_xscale = move;
if (place_meeting(x,y+1,obj_wall))
{
    if (move!=0) 
    {
        sprite_index = sprite_run; 
        image_speed = 1;
    }
    else if (sprite_index != sprite_dash) sprite_index = sprite_idle; image_speed = 0.5;
}
else
{
    if (vsp &lt; 0) sprite_index = sprite_jump; else if (dash = 1) sprite_index = sprite_dash; else sprite_index = sprite_fall;
}
}

if (DashGround == 1)
{
    view_yview = choose(0,1,2,3)
}

if (vsp == VDashSpeed)
{
    if !audio_is_playing(snd_wind2)
    {
    audio_play_sound(snd_wind2,1,0);
    }
}

if place_meeting(x,y,obj_shockwave)
{
scr_player2ded();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_shockwave">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_player2ded()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(rm_menuMain);
global.Player1Score = 0;
global.Player2Score = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.debug = true
{
global.Player1Score += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="81">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.debug = true
{
global.Player2Score += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
